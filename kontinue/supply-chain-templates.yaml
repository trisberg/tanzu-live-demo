#@ load("@ytt:data", "data")
---
apiVersion: kontinue.io/v1alpha1
kind: ClusterSourceTemplate
metadata:
  name: source
spec:
  urlPath: .status.artifact.url
  revisionPath: .status.artifact.revision

  template:
    apiVersion: source.toolkit.fluxcd.io/v1beta1
    kind: GitRepository
    metadata:
      name: $(workload.metadata.name)$
    spec:
      interval: 3m
      url: $(workload.spec.source.git.url)$
      ref: $(workload.spec.source.git.ref)$
      ignore: ""
---
apiVersion: kontinue.io/v1alpha1
kind: ClusterImageTemplate
metadata:
  name: image
spec:
  imagePath: .status.latestImage
  template:
    apiVersion: kpack.io/v1alpha1
    kind: Image
    metadata:
      name: $(workload.metadata.name)$
      labels:
        app.kubernetes.io/component: build
    spec:
      tag: #@ data.values.repositoryPrefix + "/$(workload.metadata.name)$"
      serviceAccount: build-service-account
      builder:
        kind: ClusterBuilder
        name: base
      cache:
        volume:
          size: "2Gi"
      source:
        blob:
          url: $(sources[0].url)$
---
apiVersion: kontinue.io/v1alpha1
kind: ClusterTemplate
metadata:
  name: kn-app
spec:
  template:
    apiVersion: kappctrl.k14s.io/v1alpha1
    kind: App
    metadata:
      name: $(workload.metadata.name)$
    spec:
      serviceAccountName: workflow
      fetch:
        - inline:
            paths:
              manifest.yml: |
                ---
                apiVersion: kapp.k14s.io/v1alpha1
                kind: Config
                rebaseRules:
                  - path:
                      - metadata
                      - annotations
                      - serving.knative.dev/creator
                    type: copy
                    sources: [new, existing]
                    resourceMatchers: &matchers
                      - apiVersionKindMatcher:
                          apiVersion: serving.knative.dev/v1
                          kind: Service
                  - path:
                      - metadata
                      - annotations
                      - serving.knative.dev/lastModifier
                    type: copy
                    sources: [new, existing]
                    resourceMatchers: *matchers
                ---
                apiVersion: serving.knative.dev/v1
                kind: Service
                metadata:
                  name: $(workload.metadata.name)$
                spec:
                  template:
                    metadata:
                      annotations:
                        autoscaling.knative.dev/scaleDownDelay: "15m"
                      labels:
                        tanzu.app.live.view: "true"
                        tanzu.app.live.view.application.name: $(workload.metadata.name)$
                    spec:
                      containers:
                        - name: workload
                          image: $(images[0].image)$
                          securityContext:
                            runAsUser: 1000
      template:
        - ytt: {}
      deploy:
        - kapp: {}
